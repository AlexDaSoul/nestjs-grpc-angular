version: "3.7"

services:

##### user
  user:
    image: node:dubnium
    container_name: user
    working_dir: /opt/api/user
    command: npm run docker:debug && npm run db:restore
    depends_on:
      - user-postgres
    ports:
      - 8001:9901 # node inspect user
    env_file:
      - ./docker/env/common.env
      - ./docker/env/user.env
    volumes:
      - ./src/services/user:/opt/api/user

  user-postgres:
    image: postgres:latest
    container_name: user-postgres
    restart: always
    ports: # for debug puproses, remove in the production
      - 5533:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
      - PGPORT=5432
    volumes:
      - ./src/services/user/db:/opt/api/user/db

##### chat
  chat:
    image: node:dubnium
    container_name: chat
    working_dir: /opt/api/chat
    command: npm run docker:debug
    depends_on:
      - chat-postgres
    ports:
      - 8002:9901 # node inspect chat
    env_file:
      - ./docker/env/common.env
      - ./docker/env/chat.env
    volumes:
      - ./src/services/chat:/opt/api/chat

  chat-postgres:
    image: postgres:latest
    container_name: chat-postgres
    restart: always
    ports: # for debug puproses, remove in the production
      - 5534:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
      - PGPORT=5432
    volumes:
      - ./src/services/chat/db:/opt/api/chat/db

#### envoy-api
  envoy-api:
    image: envoy:latest
    container_name: envoy-api
    build:
      context: ./docker/envoy
      dockerfile: Dockerfile
    ports:
      - 550:550
